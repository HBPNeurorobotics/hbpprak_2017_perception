import hbp_nrp_excontrol.nrp_states as states
from gazebo_msgs.srv import ApplyBodyWrench, GetModelState, SetModelState, SetModelStateRequest, DeleteModel, SpawnEntity, SpawnEntityRequest
from std_msgs.msg import Empty
from smach import StateMachine
from smach.state import State
from smach_ros import MonitorState
from geometry_msgs.msg import Wrench, Vector3, Point
import rospy
from rospy import ServiceProxy, wait_for_service

import random

import hbp_nrp_excontrol.nrp_states as states

import thimblerigger_config as tc
from thimblerigger import Thimblerigger


FINISHED = 'FINISHED'
ERROR = 'ERROR'
PREEMPTED = 'PREEMPTED'

thimblerigger = Thimblerigger(num_mugs=3,
                              mug_sdf=tc.mug_sdf_xml, ball_sdf=tc.ball_sdf_xml,
                              light_height=1.,
                              seed=None)
sm = StateMachine(outcomes=[FINISHED, ERROR, PREEMPTED])
with sm:
    StateMachine.add("step",
                     smach_ros.MonitorState(tc.thimblerigger_step_topic
                                            Empty,
                                            thimblerigger.step),
                     transitions={"valid": "step",
                                  "invalid": FINISHED}
                    )
